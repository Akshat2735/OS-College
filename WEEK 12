#include <stdio.h>

#define PAGESIZE 4

int main() {
    int pages[PAGESIZE], frames[PAGESIZE], counter[PAGESIZE];
    int pageFaults = 0, i, j, page, flag1 = 0, flag2 = 0, pos, leastCount = 9999, leastTime = 9999;

    printf("Enter the number of pages: ");
    scanf("%d", &page);

    printf("Enter the page reference string: ");
    for (i = 0; i < page; i++) {
        scanf("%d", &pages[i]);
    }

    for (i = 0; i < PAGESIZE; i++) {
        frames[i] = -1;
        counter[i] = 0;
    }

    for (i = 0; i < page; i++) {
        flag1 = flag2 = 0;

        // Check if the page is already in the frame
        for (j = 0; j < PAGESIZE; j++) {
            if (frames[j] == pages[i]) {
                counter[j]++;
                flag1 = flag2 = 1;
                break;
            }
        }

        // If not found, check for empty frame
        if (flag1 == 0) {
            for (j = 0; j < PAGESIZE; j++) {
                if (frames[j] == -1) {
                    counter[j]++;
                    pageFaults++;
                    frames[j] = pages[i];
                    flag1 = 1;
                    break;
                }
            }
        }

        // If no empty frame, use replacement algorithm
        if (flag1 == 0) {
            // FIFO
            // pos = i % PAGESIZE;
            // frames[pos] = pages[i];
            // pageFaults++;

            // LRU
            // for (j = 0; j < PAGESIZE; j++) {
            //     if (counter[j] < leastTime) {
            //         leastTime = counter[j];
            //         pos = j;
            //     }
            // }
            // frames[pos] = pages[i];
            // pageFaults++;
            // for (j = 0; j < PAGESIZE; j++) {
            //     counter[j]++;
            // }

            // LFU
            for (j = 0; j < PAGESIZE; j++) {
                if (counter[j] < leastCount) {
                    leastCount = counter[j];
                    pos = j;
                }
            }
            frames[pos] = pages[i];
            pageFaults++;
            for (j = 0; j < PAGESIZE; j++) {
                counter[j]++;
            }
        }
    }

    printf("\nPage Faults: %d\n", pageFaults);

    return 0;
}


SAMPLE OUTPUT
Enter the number of pages: 7
Enter the page reference string: 7 0 1 2 0 3 0 4 2 3 0 3 2 1 2 0 1 7 0 1
Page Faults: 9
