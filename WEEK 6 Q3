#include <pthread.h>
#include <semaphore.h>
#include <stdio.h>
#include <stdlib.h>

sem_t wrt;
pthread_mutex_t mutex;
int cnt = 0;
int numreader = 0;

void *writer(void *wno) {
    int writer_id = *((int *)wno);
    sem_wait(&wrt);
    cnt++;
    printf("Writer %d modified cnt to %d\n", writer_id, cnt);
    sem_post(&wrt);
    return NULL;
}

void *reader(void *rno) {
    int reader_id = *((int *)rno);
    pthread_mutex_lock(&mutex);
    numreader++;
    if (numreader == 1) {
        sem_wait(&wrt);
    }
    pthread_mutex_unlock(&mutex);

    printf("Reader %d: read cnt as %d\n", reader_id, cnt);

    pthread_mutex_lock(&mutex);
    numreader--;
    if (numreader == 0) {
        sem_post(&wrt);
    }
    pthread_mutex_unlock(&mutex);
    return NULL;
}

int main() {
    pthread_t read[10], write[5];
    pthread_mutex_init(&mutex, NULL);
    sem_init(&wrt, 0, 1);

    int a[10];
    for (int i = 0; i < 10; i++) {
        a[i] = i + 1;
    }

    for (int i = 0; i < 10; i++) {
        if (pthread_create(&read[i], NULL, reader, (void*)&a[i]) != 0) {
            perror("Failed to create reader thread");
            exit(EXIT_FAILURE);
        }
    }

    for (int i = 0; i < 5; i++) {
        if (pthread_create(&write[i], NULL, writer, (void*)&a[i]) != 0) {
            perror("Failed to create writer thread");
            exit(EXIT_FAILURE);
        }
    }

    for (int i = 0; i < 10; i++) {
        pthread_join(read[i], NULL);
    }

    for (int i = 0; i < 5; i++) {
        pthread_join(write[i], NULL);
    }

    pthread_mutex_destroy(&mutex);
    sem_destroy(&wrt);

    return 0;
}


OUTPUT
Writer 1 modified cnt to 1
Reader 1: read cnt as 1
Reader 2: read cnt as 1
Writer 2 modified cnt to 2
Reader 3: read cnt as 2
Reader 4: read cnt as 2
Writer 3 modified cnt to 3
Reader 5: read cnt as 3
Reader 6: read cnt as 3
Writer 4 modified cnt to 4
Reader 7: read cnt as 4
Reader 8: read cnt as 4
Reader 9: read cnt as 4
Reader 10: read cnt as 4

